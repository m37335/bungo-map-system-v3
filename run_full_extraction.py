#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
文豪ゆかり地図システム - 完全データ拡充パイプライン
青空文庫テキストからGiNZA+正規表現による地名抽出 + 自動ジオコーディング
"""

import time
import sqlite3
from bungo_map.core.database import BungoDB
from bungo_map.extractors.aozora_extractor import AozoraExtractor
from bungo_map.extractors.ginza_place_extractor import GinzaPlaceExtractor
from bungo_map.extractors.simple_place_extractor import SimplePlaceExtractor


class GeocodingEngine:
    """ジオコーディングエンジン - 日本の地名座標データベース"""
    
    def __init__(self):
        # 日本の主要地名座標データベース（拡張版）
        self.coordinates_db = {
            # 都道府県・県庁所在地
            "札幌": (43.0642, 141.3469),
            "青森": (40.8244, 140.7403),
            "仙台": (38.2682, 140.8694),
            "秋田": (39.7186, 140.1024),
            "山形": (38.2404, 140.3633),
            "福島": (37.7503, 140.4677),
            "水戸": (36.3418, 140.4468),
            "宇都宮": (36.5658, 139.8836),
            "前橋": (36.3911, 139.0608),
            "さいたま": (35.8617, 139.6455),
            "千葉": (35.6074, 140.1065),
            "甲府": (35.6642, 138.5684),
            "長野": (36.6513, 138.1811),
            "岐阜": (35.3912, 136.7223),
            "静岡": (34.9756, 138.3827),
            "津": (34.7303, 136.5086),
            "大津": (35.0045, 135.8686),
            "神戸": (34.6901, 135.1956),
            "奈良": (34.6851, 135.8048),
            "和歌山": (34.2261, 135.1675),
            "鳥取": (35.5038, 134.2384),
            "松江": (35.4723, 133.0505),
            "岡山": (34.6617, 133.9341),
            "山口": (34.1858, 131.4706),
            "徳島": (34.0658, 134.5594),
            "高松": (34.3402, 134.0434),
            "高知": (33.5597, 133.5311),
            "福岡": (33.5904, 130.4017),
            "佐賀": (33.2494, 130.2989),
            "長崎": (32.7503, 129.8779),
            "熊本": (32.7898, 130.7417),
            "大分": (33.2382, 131.6126),
            "宮崎": (31.9077, 131.4202),
            "鹿児島": (31.5966, 130.5571),
            "那覇": (26.2124, 127.6792),
            
            # 歴史的・古典地名
            "武蔵": (35.6762, 139.6503),  # 東京
            "相模": (35.3392, 139.3949),  # 神奈川
            "甲斐": (35.6642, 138.5684),  # 山梨
            "信濃": (36.6513, 138.1811),  # 長野
            "越後": (37.9022, 139.0237),  # 新潟
            "上野": (35.7090, 139.7753),  # 台東区
            "下野": (36.5658, 139.8836),  # 栃木
            "常陸": (36.3418, 140.4468),  # 茨城
            "上総": (35.3606, 140.0978),  # 千葉
            "下総": (35.7167, 140.1167),  # 千葉北部
            "安房": (35.1065, 139.8387),  # 千葉南部
            "伊豆": (34.9756, 138.9473),  # 静岡
            "駿河": (35.0180, 138.4106),  # 静岡
            "遠江": (34.8406, 137.8617),  # 静岡西部
            "三河": (34.8606, 137.0617),  # 愛知東部
            "尾張": (35.1815, 136.9066),  # 愛知西部
            "美濃": (35.3912, 136.7223),  # 岐阜
            "飛騨": (36.1459, 137.2511),  # 岐阜北部
            "近江": (35.0045, 135.8686),  # 滋賀
            "山城": (35.0116, 135.7681),  # 京都
            "大和": (34.6851, 135.8048),  # 奈良
            "河内": (34.6289, 135.6005),  # 大阪東部
            "和泉": (34.4851, 135.4048),  # 大阪南部
            "摂津": (34.7303, 135.5086),  # 大阪北部
            "播磨": (34.8406, 134.6917),  # 兵庫
            "但馬": (35.5038, 134.7384),  # 兵庫北部
            "丹波": (35.1723, 135.0505),  # 兵庫・京都
            "丹後": (35.6275, 135.1005),  # 京都北部
            "若狭": (35.4950, 135.9070),  # 福井
            "越前": (36.0653, 136.2217),  # 福井
            "加賀": (36.5944, 136.6256),  # 石川
            "能登": (37.2044, 136.9656),  # 石川北部
            "越中": (36.6959, 137.2139),  # 富山
            "佐渡": (38.0189, 138.3669),  # 新潟・佐渡島
            "出雲": (35.3678, 132.7594),  # 島根
            "石見": (34.6723, 131.8505),  # 島根西部
            "隠岐": (36.2044, 133.3256),  # 島根・隠岐諸島
            "備前": (34.6617, 133.9341),  # 岡山
            "備中": (34.5517, 133.7541),  # 岡山西部
            "備後": (34.4017, 133.2341),  # 広島東部
            "安芸": (34.3853, 132.4553),  # 広島
            "周防": (34.0658, 131.4706),  # 山口
            "長門": (34.3858, 131.1906),  # 山口北部
            "讃岐": (34.3402, 134.0434),  # 香川
            "阿波": (34.0658, 134.5594),  # 徳島
            "土佐": (33.5597, 133.5311),  # 高知
            "伊予": (33.8416, 132.7658),  # 愛媛
            "筑前": (33.5904, 130.4017),  # 福岡
            "筑後": (33.2094, 130.5017),  # 福岡南部
            "豊前": (33.6194, 131.1017),  # 福岡・大分
            "豊後": (33.2382, 131.6126),  # 大分
            "肥前": (33.2494, 130.2989),  # 佐賀・長崎
            "肥後": (32.7898, 130.7417),  # 熊本
            "日向": (31.9077, 131.4202),  # 宮崎
            "大隅": (31.3066, 130.8571),  # 鹿児島東部
            "薩摩": (31.5966, 130.5571),  # 鹿児島
            "壱岐": (33.7494, 129.6989),  # 長崎・壱岐島
            "対馬": (34.2049, 129.2890),  # 長崎・対馬
            
            # 主要都市・東京23区
            "東京": (35.6762, 139.6503),
            "横浜": (35.4437, 139.6380),
            "川崎": (35.5308, 139.7029),
            "埼玉": (35.8617, 139.6455),
            "京都": (35.0116, 135.7681),
            "大阪": (34.6937, 135.5023),
            "名古屋": (35.1815, 136.9066),
            "神戸": (34.6901, 135.1956),
            "広島": (34.3853, 132.4553),
            "北九州": (33.8834, 130.8751),
            "千代田": (35.6938, 139.7535),
            "中央": (35.6761, 139.7668),
            "港": (35.6586, 139.7514),
            "新宿": (35.6938, 139.7035),
            "文京": (35.7081, 139.7518),
            "台東": (35.7120, 139.7793),
            "墨田": (35.7101, 139.8007),
            "江東": (35.6731, 139.8172),
            "品川": (35.6297, 139.7403),
            "目黒": (35.6336, 139.7156),
            "大田": (35.5617, 139.7153),
            "世田谷": (35.6464, 139.6532),
            "渋谷": (35.6581, 139.7014),
            "中野": (35.7090, 139.6654),
            "杉並": (35.6993, 139.6368),
            "豊島": (35.7295, 139.7156),
            "北": (35.7539, 139.7268),
            "荒川": (35.7364, 139.7836),
            "板橋": (35.7511, 139.7088),
            "練馬": (35.7356, 139.6534),
            "足立": (35.7748, 139.8048),
            "葛飾": (35.7448, 139.8487),
            "江戸川": (35.7041, 139.8681),
            
            # 東京の詳細地名
            "麹町": (35.6816, 139.7419),
            "麹町辺": (35.6816, 139.7419),
            "神田": (35.6914, 139.7706),
            "小川町": (35.6914, 139.7706),
            "真砂町": (35.6674, 139.7706),
            "日本橋": (35.6812, 139.7714),
            "銀座": (35.6762, 139.7653),
            "新橋": (35.6668, 139.7587),
            "汐留": (35.6627, 139.7587),
            "虎ノ門": (35.6684, 139.7519),
            "赤坂": (35.6744, 139.7378),
            "青山": (35.6704, 139.7195),
            "麻布": (35.6518, 139.7394),
            "六本木": (35.6627, 139.7314),
            "恵比寿": (35.6464, 139.7100),
            "渋谷": (35.6581, 139.7014),
            "原宿": (35.6702, 139.7027),
            "表参道": (35.6658, 139.7111),
            "四谷": (35.6884, 139.7274),
            "市ヶ谷": (35.6944, 139.7274),
            "飯田橋": (35.7017, 139.7455),
            "水道橋": (35.7017, 139.7555),
            "御茶ノ水": (35.6995, 139.7661),
            "秋葉原": (35.6980, 139.7714),
            "上野": (35.7090, 139.7753),
            "浅草": (35.7148, 139.7967),
            "押上": (35.7101, 139.8107),
            "両国": (35.6957, 139.7944),
            "錦糸町": (35.6969, 139.8156),
            "亀戸": (35.6969, 139.8256),
            "深川": (35.6717, 139.8017),
            "門前仲町": (35.6717, 139.7917),
            "木場": (35.6717, 139.8117),
            "豊洲": (35.6550, 139.7917),
            "月島": (35.6650, 139.7817),
            "勝どき": (35.6550, 139.7717),
            "築地": (35.6654, 139.7706),
            "八重洲": (35.6812, 139.7714),
            "丸の内": (35.6814, 139.7653),
            "大手町": (35.6862, 139.7649),
            "霞が関": (35.6743, 139.7514),
            "永田町": (35.6743, 139.7414),
            "溜池": (35.6743, 139.7414),
            "本郷": (35.7090, 139.7619),
            "根津": (35.7219, 139.7625),
            "千駄木": (35.7295, 139.7625),
            "谷中": (35.7295, 139.7725),
            "日暮里": (35.7319, 139.7675),
            "西日暮里": (35.7319, 139.7575),
            "田端": (35.7364, 139.7636),
            "駒込": (35.7364, 139.7536),
            "巣鴨": (35.7339, 139.7391),
            "大塚": (35.7314, 139.7291),
            "池袋": (35.7295, 139.7156),
            "高田馬場": (35.7126, 139.7039),
            "新大久保": (35.7001, 139.7000),
            "歌舞伎町": (35.6938, 139.7085),
            "神楽坂": (35.7017, 139.7355),
            "九段": (35.6938, 139.7535),
            "靖国": (35.6938, 139.7435),
            "市谷": (35.6944, 139.7274),
            "四ツ谷": (35.6884, 139.7274),
            "信濃町": (35.6794, 139.7245),
            "千駄ヶ谷": (35.6794, 139.7145),
            "代々木": (35.6836, 139.7019),
            "新宿御苑": (35.6851, 139.7101),
            "早稲田": (35.7081, 139.7218),
            "高田": (35.7126, 139.7139),
            "目白": (35.7215, 139.7062),
            "雑司ヶ谷": (35.7215, 139.7162),
            "護国寺": (35.7215, 139.7262),
            "茗荷谷": (35.7215, 139.7362),
            "後楽園": (35.7067, 139.7519),
            "春日": (35.7067, 139.7419),
            "白山": (35.7219, 139.7525),
            "千石": (35.7295, 139.7525),
            
            # 観光地・有名地名
            "鎌倉": (35.3192, 139.5469),
            "江ノ島": (35.2978, 139.4813),
            "箱根": (35.2322, 139.1069),
            "富士山": (35.3606, 138.7274),
            "河口湖": (35.5022, 138.7644),
            "山中湖": (35.4169, 138.8644),
            "軽井沢": (36.3427, 138.6297),
            "草津": (36.6225, 138.5981),
            "日光": (36.7581, 139.6206),
            "華厳滝": (36.7381, 139.5006),
            "中禅寺湖": (36.7581, 139.5006),
            "那須": (37.0381, 140.0406),
            "塩原": (36.9081, 139.8406),
            "伊豆長岡": (35.0339, 138.9439),
            "熱海": (35.0956, 139.0773),
            "伊東": (34.9656, 139.1073),
            "下田": (34.6756, 138.9473),
            "修善寺": (34.9756, 138.9273),
            
            # 関西の有名地名
            "清水": (34.9956, 135.7831),
            "嵐山": (35.0156, 135.6781),
            "金閣寺": (35.0394, 135.7292),
            "銀閣寺": (35.0267, 135.7981),
            "祇園": (35.0036, 135.7781),
            "三条": (35.0096, 135.7681),
            "四条": (35.0036, 135.7681),
            "河原町": (35.0036, 135.7681),
            "烏丸": (35.0036, 135.7681),
            "宇治": (34.8844, 135.7998),
            "伏見": (34.9289, 135.7556),
            "難波": (34.6661, 135.5000),
            "梅田": (34.7024, 135.4959),
            "天王寺": (34.6455, 135.5066),
            "住吉": (34.6155, 135.4966),
            "堺": (34.5732, 135.4827),
            "奈良公園": (34.6851, 135.8448),
            "東大寺": (34.6889, 135.8398),
            "春日大社": (34.6819, 135.8479),
            "吉野": (34.3689, 135.8698),
            "高野山": (34.2139, 135.5831),
            "和歌浦": (34.2261, 135.1975),
            "白浜": (33.6894, 135.3367),
            
            # 九州の有名地名
            "博多": (33.5904, 130.4017),
            "天神": (33.5904, 130.4017),
            "太宰府": (33.5159, 130.5289),
            "小倉": (33.8834, 130.8751),
            "門司": (33.9417, 130.9617),
            "久留米": (33.3194, 130.5089),
            "柳川": (33.1594, 130.4089),
            "有田": (33.1822, 129.8811),
            "嬉野": (33.1294, 130.0589),
            "雲仙": (32.7639, 130.2914),
            "島原": (32.7894, 130.3639),
            "阿蘇": (32.8840, 131.1040),
            "別府": (33.2794, 131.4911),
            "湯布院": (33.2664, 131.3611),
            "高千穂": (32.7122, 131.3011),
            "指宿": (31.2556, 130.6450),
            "桜島": (31.5856, 130.6571),
            
            # その他の重要な地名
            "松山": (33.8416, 132.7658),
            "道後": (33.8516, 132.7858),
            "今治": (34.0667, 132.9997),
            "宇和島": (33.2239, 132.5606),
            "高知城": (33.5597, 133.5311),
            "桂浜": (33.4989, 133.5703),
            "室戸": (33.2894, 134.1594),
            "足摺": (32.7311, 132.9211),
            "徳島城": (34.0658, 134.5594),
            "鳴門": (34.1775, 134.6094),
            "金刀比羅宮": (34.1847, 133.8197),
            "屋島": (34.3522, 134.0934),
            "小豆島": (34.4922, 134.2934),
            "直島": (34.4622, 133.9934),
        }
        
        print(f"📊 座標データベース: {len(self.coordinates_db)}件の地名を準備")
    
    def geocode_places(self, db):
        """座標のない地名に一括で座標を付与"""
        print("\n🗺️ 4. 自動ジオコーディング実行")
        print("-" * 40)
        
        # 座標のない地名を取得
        ungeocoded_places = db.get_places_without_coordinates()
        if not ungeocoded_places:
            print("✅ 全ての地名に座標が設定済みです")
            return 0
        
        print(f"🔍 座標なし地名: {len(ungeocoded_places)}件")
        
        updated_count = 0
        
        for place in ungeocoded_places:
            place_name = place['place_name']
            place_id = place['place_id']
            
            # 完全一致検索
            if place_name in self.coordinates_db:
                lat, lng = self.coordinates_db[place_name]
                db.update_place_coordinates(place_id, lat, lng)
                print(f"✅ {place_name}: 座標更新 ({lat}, {lng})")
                updated_count += 1
                continue
            
            # 部分一致検索（地名が含まれる場合）
            found = False
            for db_place, coords in self.coordinates_db.items():
                if db_place in place_name or place_name in db_place:
                    lat, lng = coords
                    db.update_place_coordinates(place_id, lat, lng)
                    print(f"✅ {place_name}: 座標更新 ({lat}, {lng}) [部分マッチ: {db_place}]")
                    updated_count += 1
                    found = True
                    break
            
            if not found:
                print(f"🔍 {place_name}: 座標不明")
        
        return updated_count


def run_full_extraction():
    """完全データ拡充パイプライン（地名抽出 + ジオコーディング）の実行"""
    print("🚀 文豪ゆかり地図システム - 完全データ拡充開始")
    print("=" * 70)
    
    start_time = time.time()
    
    # 1. データベース初期化
    print("\n📊 1. データベース初期化")
    print("-" * 40)
    db = BungoDB()
    print("✅ データベース接続完了")
    
    # 2. 青空文庫地名抽出システム初期化
    print("\n🔍 2. 青空文庫地名抽出システム初期化")
    print("-" * 40)
    
    aozora_extractor = AozoraExtractor()
    ginza_extractor = GinzaPlaceExtractor() 
    simple_extractor = SimplePlaceExtractor()
    
    print("✅ 全抽出器初期化完了")
    
    # 3. 青空文庫からの地名抽出実行
    print("\n🏞️ 3. 青空文庫地名抽出実行")
    print("-" * 40)
    
    # 拡張作品リストで地名抽出（本番実行）
    extended_works = aozora_extractor.get_extended_works()
    total_places = 0
    
    print(f"📚 対象作品数: {len(extended_works)}作品")
    unique_authors = set(w['author_name'] for w in extended_works)
    print(f"📝 対象作者数: {len(unique_authors)}名")
    
    for idx, work_info in enumerate(extended_works, 1):
        print(f"\n📚 {idx}. {work_info['author_name']} - {work_info['title']}")
        print("   " + "-" * 45)
        
        try:
            # 作者登録
            author_id = db.upsert_author(work_info['author_name'])
            
            # 作品登録
            work_id = db.upsert_work(
                author_id=author_id,
                title=work_info['title'],
                wiki_url=work_info.get('text_url', '')
            )
            
            # 青空文庫テキスト取得
            text = aozora_extractor.download_and_extract_text(work_info['text_url'])
            
            if not text:
                print("   ❌ テキスト取得失敗")
                continue
            
            print(f"   📄 テキスト長: {len(text):,}文字")
            
            # GiNZA地名抽出（テキストサイズ制限考慮）
            test_text = text[:30000]  # 30KB制限
            ginza_places = ginza_extractor.extract_places_from_text(
                work_id=work_id, 
                text=test_text, 
                aozora_url=work_info['text_url']
            )
            
            # 正規表現地名抽出（全テキスト）
            simple_places = simple_extractor.extract_places_from_text(
                work_id=work_id, 
                text=text,
                aozora_url=work_info['text_url']
            )
            
            print(f"   🔬 GiNZA抽出: {len(ginza_places)}個")
            print(f"   📝 正規表現抽出: {len(simple_places)}個")
            
            # データベースに地名保存
            ginza_saved = 0
            simple_saved = 0
            
            # GiNZA地名を保存
            for place in ginza_places:
                try:
                    place_id = db.upsert_place(
                        work_id=work_id,
                        place_name=place.place_name,
                        before_text=place.before_text,
                        sentence=place.sentence,
                        after_text=place.after_text,
                        aozora_url=place.aozora_url,
                        extraction_method=place.extraction_method,
                        confidence=place.confidence
                    )
                    ginza_saved += 1
                except Exception as e:
                    print(f"     ⚠️ GiNZA地名保存エラー: {place.place_name} - {e}")
            
            # 正規表現地名を保存
            for place in simple_places:
                try:
                    place_id = db.upsert_place(
                        work_id=work_id,
                        place_name=place.place_name,
                        before_text=place.before_text,
                        sentence=place.sentence,
                        after_text=place.after_text,
                        aozora_url=place.aozora_url,
                        extraction_method=place.extraction_method,
                        confidence=place.confidence
                    )
                    simple_saved += 1
                except Exception as e:
                    print(f"     ⚠️ 正規表現地名保存エラー: {place.place_name} - {e}")
            
            total_saved = ginza_saved + simple_saved
            print(f"   💾 DB保存: {total_saved}個 (GiNZA: {ginza_saved}, 正規表現: {simple_saved})")
            total_places += total_saved
            
        except Exception as e:
            print(f"   ❌ 作品処理エラー: {e}")
            continue
    
    # 4. 自動ジオコーディング実行
    geocoding_engine = GeocodingEngine()
    updated_count = geocoding_engine.geocode_places(db)
    
    # 5. 結果サマリー
    print("\n🎯 5. 実行結果サマリー")
    print("-" * 40)
    
    # 最終統計
    authors_count = db.get_authors_count()
    works_count = db.get_works_count()
    places_count = db.get_places_count()
    places_with_coords = db.get_places_with_coordinates_count()
    
    end_time = time.time()
    execution_time = end_time - start_time
    
    print(f"📊 データベース最終状況:")
    print(f"   📚 作者: {authors_count}件")
    print(f"   📖 作品: {works_count}件")
    print(f"   🏞️ 地名: {places_count}件")
    print(f"   🗺️ 座標あり: {places_with_coords}件 ({places_with_coords/places_count*100:.1f}%)")
    print(f"   🎯 今回更新: {updated_count}件")
    print(f"   ⏱️ 実行時間: {execution_time:.1f}秒")
    
    print(f"\n🎉 完全データ拡充パイプライン完了！")
    print("=" * 70)
    
    # 地名抽出結果のサンプル表示
    print(f"\n📍 抽出地名サンプル (最新10件):")
    print("-" * 40)
    
    recent_places = db.get_recent_places(limit=10)
    for place in recent_places:
        coord_status = f"({place.get('lat', 'N/A')}, {place.get('lng', 'N/A')})" if place.get('lat') else "座標なし"
        print(f"   • {place['place_name']} ({place['extraction_method']}) - 信頼度: {place['confidence']:.2f}")
        print(f"     作品: {place['work_title']} / 作者: {place['author_name']}")
        print(f"     座標: {coord_status}")
        print(f"     文脈: {place['sentence'][:60]}...")
        print()


if __name__ == "__main__":
    run_full_extraction() 